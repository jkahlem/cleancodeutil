{
    "excelSets": [{
        "name": "test",
        "noOutput": true,
        "subsets": [
            {
                "name": "testMethods",
                "filter": {
                    "include": {
                        "label": ["testMethod"]
                    }
                }
            },
            {
                "name": "testCode",
                "filter": {
                    "include": {
                        "label": ["testCode"]
                    },
                    "exclude": {
                        "label": ["testMethod"]
                    }
                }
            }
        ],
        "complementFilename": "normalCodeMethods"
    },{
        "name": "default",
        "filter": {
            "exclude": {
                "label":["testMethod", "testCode", "override"]
            }
        },
        "noOutput": true,
        "subsets": [
            {
                "name": "saveRemove",
                "filter": {
                    "include": {
                        "method": ["save*", "remove*"]
                    }
                }
            },
            {
                "name": "staticOpenCreate",
                "filter": {
                    "include": {
                        "method": ["open*", "create*"],
                        "modifier": ["static"]
                    }
                }
            },
            {
                "name": "quietly",
                "filter": {
                    "include": {
                        "method": [{
                            "pattern": ".*quiet(ly)?",
                            "type": "regexp"
                        }, {
                            "pattern": ".*silent(ly)?",
                            "type": "regexp"
                        }]
                    }
                }
            },
            {
                "name": "eventHandler",
                "filter": {
                    "include": {
                        "method": ["on*"]
                    }
                }
            },
            {
                "name": "builder",
                "filter": {
                    "include": {
                        "classname": ["*Builder"]
                    }
                }
            },
            {
                "name": "conditional",
                "filter": {
                    "include": {
                        "method": [{ "pattern": "\\bif\\b", "type": "regexp"}]
                    }
                }
            },
            {
                "name": "for",
                "filter": {
                    "include": {
                        "method": [{ "pattern": "\\bfor\\b", "type": "regexp"}]
                    }
                }
            },
            {
                "name": "tryPattern",
                "filter": {
                    "include": {
                        "method": ["try*", "attempt*"]
                    }
                }
            },
            {
                "name": "finder",
                "filter": {
                    "include": {
                        "method": ["find*"]
                    }
                }
            },
            {
                "name": "attacher",
                "filter": {
                    "include": {
                        "method": ["attach*", "bind*"]
                    }
                }
            },
            {
                "name": "adder",
                "filter": {
                    "include": {
                        "method": ["add*"]
                    }
                }
            },
            {
                "name": "realGettersAndSetters",
                "filter": {
                    "include": {
                        "method": ["get*", "fetch*", "set*"],
                        "label": ["singleAssignment", "singleReturn"]
                    }
                }
            },
            {
                "name": "replacer",
                "filter": {
                    "include": {
                        "method": ["replace*"]
                    }
                }
            },
            {
                "name": "sorter",
                "filter": {
                    "include": {
                        "method": ["sort*"]
                    }
                }
            },
            {
                "name": "initializer",
                "filter": {
                    "include": {
                        "method": ["init*"]
                    }
                }
            },
            {
                "name": "registerer",
                "filter": {
                    "include": {
                        "method": ["register*", "unregister*"]
                    }
                }
            },
            {
                "name": "validator",
                "filter": {
                    "include": {
                        "method": ["validate*", "require*", "verify*"]
                    }
                }
            },
            {
                "name": "checker",
                "filter": {
                    "include": {
                        "method": ["check*"]
                    }
                }
            },
            {
                "name": "withEr",
                "filter": {
                    "include": {
                        "method": [{ "pattern": "\\bwith\\b", "type": "regexp"}]
                    }
                }
            },
            {
                "name": "isComparer",
                "filter": {
                    "include": {
                        "method": ["*better*", "*same*", "*greater*", "*lesser*", "*equal*", "*worse*"]
                    }
                }
            },
            {
                "name": "distance",
                "filter": {
                    "include": {
                        "method": ["*distance*"]
                    }
                }
            },
            {
                "name": "to-Er",
                "filter": {
                    "include": {
                        "method": [{ "pattern": "\\bto\\b", "type": "regexp"}]
                    }
                }
            },
            {
                "name": "from-Converter",
                "filter": {
                    "include": {
                        "method": [{ "pattern": "\\bfrom\\b", "type": "regexp"}]
                    }
                }
            },
            {
                "name": "by-Er",
                "filter": {
                    "include": {
                        "method": [{ "pattern": "\\bby\\b", "type": "regexp"}]
                    }
                }
            },
            {
                "name": "as-Converter",
                "filter": {
                    "include": {
                        "method": [{ "pattern": "\\bas\\b", "type": "regexp"}]
                    }
                }
            },
            {
                "name": "adapter",
                "filter": {
                    "include": {
                        "method": ["adapt*"]
                    }
                }
            },
            {
                "name": "creator",
                "filter": {
                    "include":{
                        "method": ["new*", "create*", "generate*", "build*"]
                    }
                }
            },
            {
                "name": "copy-er",
                "filter": {
                    "include": {
                        "method": ["copy*"]
                    }
                }
            },
            {
                "name": "bool-should-contains",
                "filter": {
                    "include": {
                        "method": ["should*", "contains*"]
                    }
                }
            },
            {
                "name": "indexer",
                "filter": {
                    "include": {
                        "method": ["*index of*"]
                    }
                }
            },
            {
                "name": "putter",
                "filter": {
                    "include": {
                        "method": ["put", "put *"]
                    }
                }
            },
            {
                "name": "in-Er",
                "filter": {
                    "include": {
                        "method": [{ "pattern": "\\bin\\b", "type": "regexp"}]
                    }
                }
            },
            {
                "name": "lister",
                "filter": {
                    "include": {
                        "method": ["list*"]
                    }
                }
            },
            {
                "name": "printer",
                "filter": {
                    "include": {
                        "method": ["print*"]
                    }
                }
            },
            {
                "name": "visitor",
                "filter": {
                    "include": {
                        "method": ["visit*"]
                    }
                }
            },
            {
                "name": "acceptor",
                "filter": {
                    "include": {
                        "method": ["accept*"]
                    }
                }
            },
            {
                "name": "nexter",
                "filter": {
                    "include": {
                        "method": ["*next*"]
                    }
                }
            },
            {
                "name": "mapperTransformer",
                "filter": {
                    "include": {
                        "method": ["map*", "transform*"]
                    }
                }
            },
            {
                "name": "readWriter",
                "filter": {
                    "include": {
                        "method": ["read*", "write*"]
                    }
                }
            },
            {
                "name": "maybe-method",
                "filter": {
                    "include": {
                        "method": ["maybe*"]
                    }
                }
            },
            {
                "name": "willFuture",
                "filter": {
                    "include": {
                        "method": ["will*"]
                    }
                }
            },
            {
                "name": "comparator",
                "filter": {
                    "include": {
                        "method": ["compare*"]
                    }
                }
            },
            {
                "name": "parserDecoder",
                "filter": {
                    "include": {
                        "method": ["parse*", "marshal*", "unmarshal*", "encode*", "decode*", "serialize*", "deserialize*", "encrypt*", "decrypt*"]
                    }
                }
            },
            {
                "name": "permissions-may",
                "filter": {
                    "include": {
                        "method": ["may *"]
                    }
                }
            },
            {
                "name": "applier",
                "filter": {
                    "include": {
                        "method": ["apply*"]
                    }
                }
            },
            {
                "name": "cloner",
                "filter": {
                    "include": {
                        "method": ["clone*"]
                    }
                }
            },
            {
                "name": "thrower",
                "filter": {
                    "include": {
                        "method": ["*throw*"]
                    }
                }
            },
            {
                "name": "searcher",
                "filter": {
                    "include": {
                        "method": ["search*"]
                    }
                }
            },
            {
                "name": "typicalBooleanGetter",
                "filter": {
                    "include": {
                        "method": ["is *", "can *", "has *", "are *"],
                        "returntype": ["boolean"]
                    }
                }
            },
            {
                "name": "testCodeExceptForTestMethods",
                "filter": {
                    "include": {
                        "label": ["testCode"]
                    }
                }
            },
            {
                "name": "of-er",
                "filter": {
                    "include": {
                        "method": [{"type": "regexp", "pattern": "\\bof\\b"}]
                    }
                }
            },
            {
                "name": "simpleConverter",
                "filter": {
                    "include": {
                        "method": ["convert*"]
                    }
                }
            },
            {
                "name": "tester",
                "filter": {
                    "include": {
                        "method": ["test*"]
                    },
                    "exclude": {
                        "label": ["testCode"]
                    }
                }
            },
            {
                "name": "closer",
                "filter": {
                    "include": {
                        "method": ["close*"]
                    }
                }
            },
            {
                "name": "appender",
                "filter": {
                    "include": {
                        "method": ["append*"]
                    }
                }
            },
            {
                "name": "boundings",
                "filter": {
                    "include": {
                        "method": ["*bound*"]
                    }
                }
            },
            {
                "name": "joiner",
                "filter": {
                    "include": {
                        "method": ["join*", "concat*", "trim*"]
                    }
                }
            },
            {
                "name": "container",
                "filter": {
                    "include": {
                        "method": ["contains*"]
                    }
                }
            },
            {
                "name": "exister",
                "filter": {
                    "include": {
                        "method": ["*exists"]
                    }
                }
            },
            {
                "name": "ensurer",
                "filter": {
                    "include": {
                        "method": ["ensure*"]
                    }
                }
            },
            {
                "name": "provider",
                "filter": {
                    "include": {
                        "method": ["provide*"]
                    }
                }
            },
            {
                "name": "defaulter",
                "filter": {
                    "include": {
                        "method": [{"type": "regexp", "pattern":"\\bor .*default\\b.*"}]
                    }
                }
            },
            {
                "name": "filterer",
                "filter": {
                    "include": {
                        "method":["filter*"]
                    }
                }
            },
            {
                "name": "minmaxer",
                "filter":{
                    "include":{
                        "method":["*min*max*"]
                    }
                }
            },
            {
                "name": "or-er",
                "filter":{
                    "include":{
                        "method":[{
                            "type": "regexp",
                            "pattern": "\\bor\\b"
                        }]
                    }
                }
            },
            {
                "name": "and-Setter",
                "filter": {
                    "include": {
                        "method": ["set * and *"]
                    }
                }
            },
            {
                "name": "all",
                "filter": {
                    "include": {
                        "method": ["* all", "all"]
                    }
                }
            }
        ],
        "complementFilename": "otherMethods"
   }]
}