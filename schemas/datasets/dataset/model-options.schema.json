{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "model-options.schema.json",
    "title": "Model options",
    "description": "Defines different options which are used for the model.",
    "type": "object",
    "properties": {
        "batchSize": {
            "description": "Defines the size of a batch in the training/evaluation process",
            "type": "integer",
            "minimum": 1
        },
        "numOfEpochs": {
            "description": "Defines the number of training epochs.",
            "type": "integer",
            "minimum": 1
        },
        "numReturnSequences": {
            "description": "Sets the number of expected return sequences to predict different suggestions",
            "type": "integer",
            "minimum": 1
        },
        "maxSequenceLength": {
            "description": "Sets the maximum length of the predicted sequence",
            "type": "integer",
            "minimum": 1
        },
        "useContextTypes": {
            "description": "If true, the types available in a file are also sent to the predictor and used for training.",
            "type": "boolean"
        },
        "emptyParameterListByKeyword": {
            "description": "If true, a keyword (like 'void') is used to indicate no output.",
            "type": "boolean"
        },
        "adafactor": {
            "description": "Settings for adafactor optimizer",
            "type": "object",
            "$ref": "adafactor.schema.json"
        },
        "adam": {
            "description": "Settings for adam optimizer",
            "type": "object",
            "$ref": "adam.schema.json"
        },
        "modelType": {
            "description": "Defines, which model type should be used for the given task.",
            "type": "string",
            "enum": ["t5", "bart"]
        },
        "modelName": {
            "description": "Defines, which model should be used for the given task.",
            "type": "string"
        },
        "numBeams": {
            "type": "integer",
            "minimum": 1
        },
        "lengthPenalty": {
            "type": "number"
        },
        "topK": {
            "type": "number",
            "minimum": 0
        },
        "topN": {
            "type": "number",
            "minimum": 0
        },
        "outputOrder": {
            "type": "array",
            "description": "Defines, how the output sequence is ordered. If defined, the array must consist each of the 'returnType', 'parameterName', 'parameterType' tokens exactly once. Also, 'returnType' must not come between the parameter tokens.",
            "minItems": 3,
            "maxItems": 3,
            "items": {
                "type": "string",
                "enum": ["returnType", "parameterName", "parameterType"]
            }
        }
    }
}