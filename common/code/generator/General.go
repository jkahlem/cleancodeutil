package generator

import "go/ast"

const HeaderNote = `/**
* THE CODE OF THIS FILE IS AUTOMATICALLY GENERATED AND SHOULD NOT BE EDITED MANUALLY.
*/
`

type Base struct {
	// The name of the element.
	Name string
	// Documentation above the element definition
	Documentation string
	// Comments on the same line as the element definition
	// For structs/interfaces, this will be the line after the closing '}'
	//   type Example struct {
	//		field string // line comment of field
	//	 } // line comment of struct
	LineComment string
}

func getBaseValuesFromField(field *ast.Field, nameIndex int) Base {
	base := Base{}
	if nameIndex >= 0 {
		base.Name = field.Names[nameIndex].Name
	}
	if field.Doc != nil {
		base.Documentation = field.Doc.Text()
	}
	if field.Comment != nil {
		base.LineComment = field.Comment.Text()
	}
	return base
}

func getBaseValuesFromTypeSpec(typeSpec *ast.TypeSpec) Base {
	base := Base{}
	if typeSpec.Name != nil {
		base.Name = typeSpec.Name.Name
	}
	if typeSpec.Doc != nil {
		base.Documentation = typeSpec.Doc.Text()
	}
	if typeSpec.Comment != nil {
		base.LineComment = typeSpec.Comment.Text()
	}
	return base
}
